/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package puntoA;
import PantallaPrincipal.Menu;
import java.awt.Adjustable;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cristian Rojas
 */
public class Mixto extends javax.swing.JFrame {

    List<String> nroRandom, semillas;
    int cantNum;
    DefaultTableModel datos;
    Object [] fila;
	
    /**
     * Creates new form Mixto
     */
    public Mixto() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        nroRandom = new ArrayList<>();
        semillas = new ArrayList<>();
        fila = new Object[3];
        this.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent evt){
                if (JOptionPane.showConfirmDialog(rootPane, "Â¿Desea realmente salir del Sistema?","ADVERTENCIA",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION) {                   
                System.exit(0);
            }               
        }});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnGenerar = new javax.swing.JButton();
        jbtnSere = new javax.swing.JButton();
        jlblPuntoA = new javax.swing.JLabel();
        jPanel = new javax.swing.JPanel();
        jlblSemilla = new javax.swing.JLabel();
        jtxtSemilla = new javax.swing.JTextField();
        jtxtM = new javax.swing.JTextField();
        jlblM = new javax.swing.JLabel();
        jtxtC = new javax.swing.JTextField();
        jtxtA = new javax.swing.JTextField();
        jlblC = new javax.swing.JLabel();
        jlblA = new javax.swing.JLabel();
        jlblCantNum = new javax.swing.JLabel();
        jtxtCantNum = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        jtxtAreaDatos = new javax.swing.JTextArea();
        jbtnLimpiar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabla = new javax.swing.JTable();
        jbtnVolver = new javax.swing.JButton();
        jbtnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Metodos Congruenciales");
        setResizable(false);

        jbtnGenerar.setText("Generar");
        jbtnGenerar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGenerarActionPerformed(evt);
            }
        });

        jbtnSere.setText("Seguir Serie");
        jbtnSere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSereActionPerformed(evt);
            }
        });

        jlblPuntoA.setFont(new java.awt.Font("BankGothic Lt BT", 0, 24)); // NOI18N
        jlblPuntoA.setText("Metodo Congruencial Mixto");

        jPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametros"));

        jlblSemilla.setText("Ingrese Semilla:");

        jtxtSemilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtSemillaKeyTyped(evt);
            }
        });

        jtxtM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtMKeyTyped(evt);
            }
        });

        jlblM.setText("Ingrese M:");

        jtxtC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCKeyTyped(evt);
            }
        });

        jtxtA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtAKeyTyped(evt);
            }
        });

        jlblC.setText("Ingrese C:");

        jlblA.setText("Ingrese A:");

        jlblCantNum.setText("Ingrese Cantidad de Numeros a Generar:");

        jtxtCantNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantNumKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jlblCantNum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCantNum, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblC)
                            .addComponent(jlblA)
                            .addComponent(jlblSemilla)
                            .addComponent(jlblM))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtA)
                            .addComponent(jtxtSemilla, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtxtM)
                            .addComponent(jtxtC, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCantNum)
                    .addComponent(jtxtCantNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblSemilla)
                    .addComponent(jtxtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblM)
                    .addComponent(jtxtM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jtxtCantNum.getAccessibleContext().setAccessibleName("jtxtCantNum");

        jtxtAreaDatos.setColumns(20);
        jtxtAreaDatos.setRows(5);
        jScrollPane.setViewportView(jtxtAreaDatos);
        jtxtAreaDatos.getAccessibleContext().setAccessibleName("jtxtAreaDatos");

        jbtnLimpiar.setText("Limpiar");
        jbtnLimpiar.setMaximumSize(new java.awt.Dimension(71, 23));
        jbtnLimpiar.setMinimumSize(new java.awt.Dimension(71, 23));
        jbtnLimpiar.setPreferredSize(new java.awt.Dimension(71, 23));
        jbtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLimpiarActionPerformed(evt);
            }
        });

        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NÂ°", "Xi", "Nro Random"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTabla);

        jbtnVolver.setText("Volver");
        jbtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVolverActionPerformed(evt);
            }
        });

        jbtnSalir.setText("Salir");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlblPuntoA, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbtnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnSere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblPuntoA, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jbtnGenerar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jbtnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jbtnSere, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(jbtnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtCantNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantNumKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtSemilla.transferFocus();
        }
    }//GEN-LAST:event_jtxtCantNumKeyTyped

    private void jtxtMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtMKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM.transferFocus();
        }
    }//GEN-LAST:event_jtxtMKeyTyped

    private void jtxtCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtC.transferFocus();
        }
    }//GEN-LAST:event_jtxtCKeyTyped

    private void jtxtAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtA.transferFocus();
        }

    }//GEN-LAST:event_jtxtAKeyTyped

    private void jtxtSemillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtSemillaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtSemillaKeyTyped

    private void jbtnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGenerarActionPerformed
        // TODO add your handling code here:
        jtxtAreaDatos.setText(null);
        try{
            nroRandom = new ArrayList<>();
            semillas = new ArrayList<>();
            cantNum = Integer.parseInt(jtxtCantNum.getText());
            double f = Double.valueOf(jtxtA.getText());    
            double x0 = Double.valueOf(jtxtSemilla.getText());
            double m = Double.valueOf(jtxtM.getText());
            double c = Double.valueOf(jtxtC.getText());
            double x2;
            boolean bandera = true;
            DecimalFormat RedondearADos = new DecimalFormat("0.0000");
            if(cantNum<1){
                JOptionPane.showMessageDialog(rootPane, "Cantidad de Numeros tiene que ser mayor o igual a 1", "Validando Datos", WIDTH);
                return;
            }
            if(f<0){
                JOptionPane.showMessageDialog(rootPane, "A tiene que ser mayor o igual a 0", "Validando Datos", WIDTH);
                return;
            }
            if(x0<0){
                JOptionPane.showMessageDialog(rootPane, "La semilla tiene que ser mayor o igual a 0", "Validando Datos", WIDTH);
                return;
            }
            if(m<0){
                JOptionPane.showMessageDialog(rootPane, "M tiene que ser mayor o igual a 0", "Validando Datos", WIDTH);
                return;
            }
            if(c<0){
                JOptionPane.showMessageDialog(rootPane, "C tiene que ser mayor o igual a 0", "Validando Datos", WIDTH);
                return;
            }
            if(f>m){
                JOptionPane.showMessageDialog(rootPane, "A tiene que ser menor a M", "Validando Datos", WIDTH);
            }else if(c>m){
                JOptionPane.showMessageDialog(rootPane, "C tiene que ser menor a M", "Validando Datos", WIDTH);
            }else if(x0>m){
                JOptionPane.showMessageDialog(rootPane, "La semilla tiene que ser menor a M", "Validando Datos", WIDTH);
            }else{
                datos = new DefaultTableModel(new Object[]{"NÂ°", "Xi", "Nro Random"}, 0);
                jTabla.setModel(datos);
                for (int k = 0; k < cantNum; k++) {
                    if(bandera){
                        x2 = x0/m;
                        semillas.add(String.valueOf(x0));
                        nroRandom.add(RedondearADos.format(x2));
                        bandera = false;
                    }else{
                        x0 = (long)(((x0*f+c)%m));
                        x2 = x0/(m);
                        semillas.add(String.valueOf(x0));
                        nroRandom.add(RedondearADos.format(x2));
                    }
                }
                nroRandom.forEach((nro) -> {
                    jtxtAreaDatos.append(nro + "\n");
                });
                for (int j = 0; j < nroRandom.size(); j++) {
                    fila = new Object[3];
                    fila[0]= (j+1);
                    fila[1]= semillas.get(j);
                    fila[2]= nroRandom.get(j);
                    datos.addRow(fila);
                }
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane, "No se ingresaron los datos", "Validando Datos", WIDTH);
        }
    }//GEN-LAST:event_jbtnGenerarActionPerformed

    private void jbtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLimpiarActionPerformed
        // TODO add your handling code here:
        jtxtA.setText(null);
        jtxtC.setText(null);
        jtxtM.setText(null);
        jtxtSemilla.setText(null);
        jtxtAreaDatos.setText(null);
        jtxtCantNum.setText(null);
        jTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "NÂ°", "Xi", "Nro Random"
            }
        ));
    }//GEN-LAST:event_jbtnLimpiarActionPerformed

    private void jbtnSereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSereActionPerformed
        // TODO add your handling code here:
        try{
            double ultSemilla = Double.valueOf(semillas.get(cantNum-1));
            double f = Double.valueOf(jtxtA.getText());
            double m = Double.valueOf(jtxtM.getText());
            double c = Double.valueOf(jtxtC.getText());
            double x2;
            DecimalFormat RedondearADos = new DecimalFormat("0.0000");
            double sigSemilla = (double)(((ultSemilla*f+c)%m));
            semillas.add(String.valueOf(sigSemilla));
            cantNum++;
            x2 = sigSemilla/(m);
            nroRandom.add(RedondearADos.format(x2));
            jtxtAreaDatos.append(RedondearADos.format(x2) + "\n");
            fila[0]= (cantNum);
            fila[1]= semillas.get(cantNum-1);
            fila[2]= nroRandom.get(cantNum-1);
            datos.addRow(fila);
            scrollToBottom(jScrollPane4);
        }catch(NumberFormatException | NullPointerException e){
            JOptionPane.showMessageDialog(rootPane, "Serie vacia", "Informacion Serie", WIDTH);
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane, "No se ingresaron los datos", "Informacion Serie", WIDTH);
        }
    }//GEN-LAST:event_jbtnSereActionPerformed

    private void scrollToBottom(JScrollPane scrollPane) {
        JScrollBar verticalBar = scrollPane.getVerticalScrollBar();
        AdjustmentListener downScroller = new AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent e) {
                Adjustable adjustable = e.getAdjustable();
                adjustable.setValue(adjustable.getMaximum());
                verticalBar.removeAdjustmentListener(this);
            }
        };
        verticalBar.addAdjustmentListener(downScroller);
    }
    
    private void jbtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVolverActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Menu m = new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_jbtnVolverActionPerformed

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(rootPane, "Â¿Desea realmente salir del sistema?",
            "Salir del sistema", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_jbtnSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mixto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Mixto().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTabla;
    private javax.swing.JButton jbtnGenerar;
    private javax.swing.JButton jbtnLimpiar;
    private javax.swing.JButton jbtnSalir;
    private javax.swing.JButton jbtnSere;
    private javax.swing.JButton jbtnVolver;
    private javax.swing.JLabel jlblA;
    private javax.swing.JLabel jlblC;
    private javax.swing.JLabel jlblCantNum;
    private javax.swing.JLabel jlblM;
    private javax.swing.JLabel jlblPuntoA;
    private javax.swing.JLabel jlblSemilla;
    private javax.swing.JTextField jtxtA;
    private javax.swing.JTextArea jtxtAreaDatos;
    private javax.swing.JTextField jtxtC;
    private javax.swing.JTextField jtxtCantNum;
    private javax.swing.JTextField jtxtM;
    private javax.swing.JTextField jtxtSemilla;
    // End of variables declaration//GEN-END:variables
}
